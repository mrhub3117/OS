#include <stdio.h>
#include <stdlib.h>

typedef struct {
    int size;
    int allocated;
} Partition;

typedef struct {
    int size;
    int allocated_partition;
} Task;

int main() {
    int num_partitions, num_tasks;

  
    printf("Enter the number of partitions: ");
    scanf("%d", &num_partitions);
    Partition partitions[num_partitions];


    for (int i = 0; i < num_partitions; i++) {
        partitions[i].allocated = 0;
        printf("Partition %d size: ", i + 1);
        scanf("%d", &partitions[i].size);
    }

    
    printf("Enter the number of tasks: ");
    scanf("%d", &num_tasks);
    Task tasks[num_tasks];

  
    for (int i = 0; i < num_tasks; i++) {
        printf("Task %d size: ", i + 1);
        scanf("%d", &tasks[i].size);
        tasks[i].allocated_partition = -1;
    }

    // Allocate memory to tasks
    for (int i = 0; i < num_tasks; i++) {
        int allocated_flag = 0;
        for (int j = 0; j < num_partitions; j++) {
            if (tasks[i].size <= partitions[j].size && !partitions[j].allocated) {
                printf("Task %d allocated to Partition %d\n", i + 1, j + 1);
                partitions[j].allocated = 1;
                tasks[i].allocated_partition = j + 1;
                allocated_flag = 1;
                break;
            }
        }
        if (!allocated_flag) {
            printf("Task %d could not be allocated\n", i + 1);
            tasks[i].allocated_partition = -1;
        }
    }

    return 0;
}
