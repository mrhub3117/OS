#include <stdio.h>
#include <unistd.h>
#include <string.h>

int main() {
    char command[100];

    // Prompt the user to enter a command
    printf("Enter a command to execute: ");
    fgets(command, sizeof(command), stdin);

    // Remove the newline character from the command string
    command[strcspn(command, "\n")] = 0;

    pid_t pid = fork();

    if (pid < 0) {
        // Fork failed
        printf("Fork failed\n");
        return 1;
    } else if (pid == 0) {
        // Child process
        printf("This is the child process\n");

        // Use execlp() to replace the child process with the entered command
        execlp(command, command, NULL);

        // If execlp() fails
        printf("execlp() failed\n");
    } else {
        // Parent process
        printf("This is the parent process\n");

        // Wait for the child process to complete
        wait(NULL);
        printf("Child process completed\n");
    }

    return 0;
}
